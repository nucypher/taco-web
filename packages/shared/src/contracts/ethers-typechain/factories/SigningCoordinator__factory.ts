/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';
import type {
  SigningCoordinator,
  SigningCoordinatorInterface,
} from '../SigningCoordinator';

const _abi = [
  {
    type: 'constructor',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: '_application',
        type: 'address',
        internalType: 'contract TACoApplication',
      },
    ],
  },
  {
    type: 'error',
    name: 'AccessControlBadConfirmation',
    inputs: [],
  },
  {
    type: 'error',
    name: 'AccessControlEnforcedDefaultAdminDelay',
    inputs: [
      {
        name: 'schedule',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'error',
    name: 'AccessControlEnforcedDefaultAdminRules',
    inputs: [],
  },
  {
    type: 'error',
    name: 'AccessControlInvalidDefaultAdmin',
    inputs: [
      {
        name: 'defaultAdmin',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'error',
    name: 'AccessControlUnauthorizedAccount',
    inputs: [
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'neededRole',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'error',
    name: 'ECDSAInvalidSignature',
    inputs: [],
  },
  {
    type: 'error',
    name: 'ECDSAInvalidSignatureLength',
    inputs: [
      {
        name: 'length',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  {
    type: 'error',
    name: 'ECDSAInvalidSignatureS',
    inputs: [
      {
        name: 's',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'error',
    name: 'InvalidInitialization',
    inputs: [],
  },
  {
    type: 'error',
    name: 'NotInitializing',
    inputs: [],
  },
  {
    type: 'error',
    name: 'SafeCastOverflowedUintDowncast',
    inputs: [
      {
        name: 'bits',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'value',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  {
    type: 'event',
    name: 'DefaultAdminDelayChangeCanceled',
    inputs: [],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DefaultAdminDelayChangeScheduled',
    inputs: [
      {
        name: 'newDelay',
        type: 'uint48',
        internalType: 'uint48',
        indexed: false,
      },
      {
        name: 'effectSchedule',
        type: 'uint48',
        internalType: 'uint48',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DefaultAdminTransferCanceled',
    inputs: [],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DefaultAdminTransferScheduled',
    inputs: [
      {
        name: 'newAdmin',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'acceptSchedule',
        type: 'uint48',
        internalType: 'uint48',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DispatcherChanged',
    inputs: [
      {
        name: 'oldDispatcher',
        type: 'address',
        internalType: 'address',
        indexed: false,
      },
      {
        name: 'newDispatcher',
        type: 'address',
        internalType: 'address',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Initialized',
    inputs: [
      {
        name: 'version',
        type: 'uint64',
        internalType: 'uint64',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'InitiateSigningCohort',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
        indexed: true,
      },
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
        indexed: false,
      },
      {
        name: 'authority',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'participants',
        type: 'address[]',
        internalType: 'address[]',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MaxCohortSizeChanged',
    inputs: [
      {
        name: 'oldSize',
        type: 'uint16',
        internalType: 'uint16',
        indexed: false,
      },
      {
        name: 'newSize',
        type: 'uint16',
        internalType: 'uint16',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleAdminChanged',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'previousAdminRole',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'newAdminRole',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleGranted',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleRevoked',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'SigningCohortConditionsSet',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
        indexed: true,
      },
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
        indexed: false,
      },
      {
        name: 'conditions',
        type: 'bytes',
        internalType: 'bytes',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'SigningCohortDeployed',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
        indexed: true,
      },
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'SigningCohortSignaturePosted',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
        indexed: true,
      },
      {
        name: 'provider',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'signature',
        type: 'bytes',
        internalType: 'bytes',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TimeoutChanged',
    inputs: [
      {
        name: 'oldTimeout',
        type: 'uint32',
        internalType: 'uint32',
        indexed: false,
      },
      {
        name: 'newTimeout',
        type: 'uint32',
        internalType: 'uint32',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'function',
    name: 'DEFAULT_ADMIN_ROLE',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'function',
    name: 'INITIATOR_ROLE',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'function',
    name: 'acceptDefaultAdminTransfer',
    stateMutability: 'nonpayable',
    inputs: [],
    outputs: [],
  },
  {
    type: 'function',
    name: 'application',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract TACoApplication',
      },
    ],
  },
  {
    type: 'function',
    name: 'beginDefaultAdminTransfer',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'newAdmin',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'cancelDefaultAdminTransfer',
    stateMutability: 'nonpayable',
    inputs: [],
    outputs: [],
  },
  {
    type: 'function',
    name: 'changeDefaultAdminDelay',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'newDelay',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'defaultAdmin',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'function',
    name: 'defaultAdminDelay',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'defaultAdminDelayIncreaseWait',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'deployAdditionalChainForSigningMultisig',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'getChains',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
    ],
  },
  {
    type: 'function',
    name: 'getCondition',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
  },
  {
    type: 'function',
    name: 'getRoleAdmin',
    stateMutability: 'view',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'function',
    name: 'getSigner',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'provider',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        components: [
          {
            name: 'provider',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'operator',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'signature',
            type: 'bytes',
            internalType: 'bytes',
          },
        ],
        internalType: 'struct SigningCoordinator.SigningCohortParticipant',
      },
    ],
  },
  {
    type: 'function',
    name: 'getThreshold',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
  },
  {
    type: 'function',
    name: 'getSigners',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple[]',
        components: [
          {
            name: 'provider',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'operator',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'signature',
            type: 'bytes',
            internalType: 'bytes',
          },
        ],
        internalType: 'struct SigningCoordinator.SigningCohortParticipant[]',
      },
    ],
  },
  {
    type: 'function',
    name: 'getSigningCohortConditions',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
  },
  {
    type: 'function',
    name: 'getSigningCohortDataHash',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'function',
    name: 'getSigningCohortState',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint8',
        internalType: 'enum SigningCoordinator.SigningCohortState',
      },
    ],
  },
  {
    type: 'function',
    name: 'getSigningCoordinatorChild',
    stateMutability: 'view',
    inputs: [
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'function',
    name: 'grantRole',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'hasRole',
    stateMutability: 'view',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
  {
    type: 'function',
    name: 'initialize',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: '_timeout',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: '_maxDkgSize',
        type: 'uint16',
        internalType: 'uint16',
      },
      {
        name: '_signingCoordinatorDispatcher',
        type: 'address',
        internalType: 'contract SigningCoordinatorDispatcher',
      },
      {
        name: '_admin',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'initiateSigningCohort',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'authority',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'providers',
        type: 'address[]',
        internalType: 'address[]',
      },
      {
        name: 'threshold',
        type: 'uint16',
        internalType: 'uint16',
      },
      {
        name: 'duration',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
  },
  {
    type: 'function',
    name: 'isCohortActive',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
  {
    type: 'function',
    name: 'isSigner',
    stateMutability: 'view',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'provider',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
  {
    type: 'function',
    name: 'maxCohortSize',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
  },
  {
    type: 'function',
    name: 'numberOfSigningCohorts',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  {
    type: 'function',
    name: 'owner',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'function',
    name: 'pendingDefaultAdmin',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: 'newAdmin',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'schedule',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'pendingDefaultAdminDelay',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: 'newDelay',
        type: 'uint48',
        internalType: 'uint48',
      },
      {
        name: 'schedule',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'postSigningCohortSignature',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'signature',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'renounceRole',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'revokeRole',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'rollbackDefaultAdminDelay',
    stateMutability: 'nonpayable',
    inputs: [],
    outputs: [],
  },
  {
    type: 'function',
    name: 'setDispatcher',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'dispatcher',
        type: 'address',
        internalType: 'contract SigningCoordinatorDispatcher',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'setMaxDkgSize',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'newSize',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'setSigningCohortConditions',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'cohortId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'conditions',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'setTimeout',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'newTimeout',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'signingCohorts',
    stateMutability: 'view',
    inputs: [
      {
        name: '',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
    outputs: [
      {
        name: 'initiator',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'initTimestamp',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'endTimestamp',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'authority',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'totalSignatures',
        type: 'uint16',
        internalType: 'uint16',
      },
      {
        name: 'numSigners',
        type: 'uint16',
        internalType: 'uint16',
      },
      {
        name: 'threshold',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
  },
  {
    type: 'function',
    name: 'signingCoordinatorDispatcher',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract SigningCoordinatorDispatcher',
      },
    ],
  },
  {
    type: 'function',
    name: 'supportsInterface',
    stateMutability: 'view',
    inputs: [
      {
        name: 'interfaceId',
        type: 'bytes4',
        internalType: 'bytes4',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
  {
    type: 'function',
    name: 'timeout',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint32',
        internalType: 'uint32',
      },
    ],
  },
] as const;

export class SigningCoordinator__factory {
  static readonly abi = _abi;
  static createInterface(): SigningCoordinatorInterface {
    return new utils.Interface(_abi) as SigningCoordinatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SigningCoordinator {
    return new Contract(address, _abi, signerOrProvider) as SigningCoordinator;
  }
}
