{
  "name": "@nucypher/nucypher-ts",
  "author": "Piotr Roslaniec <p.roslaniec@gmail.com>",
  "version": "1.0.0-alpha.5",
  "license": "GPL-3.0-only",
  "repository": {
    "type": "git",
    "url": "https://github.com/nucypher/nucypher-ts"
  },
  "main": "build/main/src/index.js",
  "typings": "build/main/src/index.d.ts",
  "module": "build/module/src/index.js",
  "engines": {
    "node": ">=16"
  },
  "exports": {
    ".": {
      "require": "./build/main/src/index.js",
      "import": "./build/module/src/index.js"
    }
  },
  "keywords": [
    "pre",
    "threshold",
    "access control"
  ],
  "scripts": {
    "build": "run-p build:*",
    "build:main": "tsc -p tsconfig.json",
    "build:module": "tsc -p tsconfig.module.json",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" \"test/**/*.ts\" --write",
    "fix:lint": "eslint src test --ext .ts --fix",
    "test": "run-s build test:*",
    "test:lint": "eslint src test --ext .ts",
    "test:exports": "ts-unused-exports tsconfig.json --ignoreFiles src/index.ts",
    "test:prettier": "prettier \"src/**/*.ts\" \"test/**/*.ts\" --list-different",
    "test:unit": "jest --detectOpenHandles --forceExit",
    "watch:build": "tsc -p tsconfig.json -w",
    "watch:test": "jest --watch",
    "cov": "run-s build test:unit && open-cli coverage/index.html",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "version": "standard-version",
    "version:alpha": "standard-version --prerelease alpha",
    "version:beta": "standard-version --prerelease beta",
    "reset-hard": "git clean -dfx && git reset --hard && yarn",
    "prepare-release": "run-s reset-hard test doc:html version doc:publish",
    "prepare-release:alpha": "run-s reset-hard test version:alpha ",
    "prepare-release:beta": "run-s reset-hard test version:beta ",
    "typechain": "typechain --target=ethers-v5 \"abi/**/*.json\"",
    "prebuild": "yarn typechain"
  },
  "dependencies": {
    "@nucypher/nucypher-core": "^0.13.0",
    "axios": "^1.5.0",
    "deep-equal": "^2.2.1",
    "ethers": "^5.7.2",
    "qs": "^6.10.1",
    "semver": "^7.5.2",
    "zod": "^3.22.1"
  },
  "devDependencies": {
    "@babel/core": "^7.22.11",
    "@babel/preset-env": "^7.23.2",
    "@skypack/package-check": "^0.2.2",
    "@typechain/ethers-v5": "^11.1.1",
    "@types/deep-equal": "^1.0.1",
    "@types/jest": "^29.5.4",
    "@types/qs": "^6.9.7",
    "@types/semver": "^7.5.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "bundlemon": "^2.0.0-rc.1",
    "cz-conventional-changelog": "^3.0.1",
    "eslint": "^8.48.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.28.1",
    "gh-pages": "^6.0.0",
    "husky": "^8.0.3",
    "jest": "^29.6.4",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.2.0",
    "prettier": "^3.0.2",
    "standard-version": "^9.0.0",
    "ts-jest": "^29.1.1",
    "ts-unused-exports": "^10.0.0",
    "typechain": "^8.3.1",
    "typedoc": "^0.25.0",
    "typedoc-plugin-missing-exports": "^2.1.0",
    "typescript": "^5.2.2"
  },
  "files": [
    "build/main",
    "build/module",
    "!**/*.test.*",
    "!**/*.json",
    "CHANGELOG.md",
    "LICENSE",
    "README.md"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "yarn typechain && yarn test:lint && yarn test"
    }
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "prettier": {
    "printWidth": 80,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "transform": {
      "^.+\\.js": "babel-jest"
    },
    "coverageReporters": [
      "json",
      "text",
      "html",
      "lcov",
      "clover"
    ],
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "src/**/*.ts"
    ]
  },
  "bundlemon": {
    "baseDir": "./build",
    "files": [
      {
        "path": "**/*.*"
      }
    ]
  }
}
